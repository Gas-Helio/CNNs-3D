# -*- coding: utf-8 -*-
"""LBP3D.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y-EefNZliOPCzhaLFRu_43Gr0h2xalW3
"""

import numpy as np

def LBP_3D(img, v):
    resul = np.zeros(img.shape)
    imgZeros = np.zeros((img.shape[0]+2, img.shape[1]+2, img.shape[2]+2))
    imgZeros[1:-1,1:-1,1:-1] = img
    for x in range(img.shape[0]):
        for y in range(img.shape[1]):
            for z in range(img.shape[2]):
                resul[x,y,z] = v(imgZeros[x:x+3, y:y+3, z:z+3])
    return resul

def lbp_v1(img):
    locais = [[0,1,1],[1,0,1],[1,1,0],[1,1,2],[1,2,1],[2,1,0]]
    binary = ''
    for l in locais:
        binario += '1' if ((img[l[0],l[1],l[2]]) > img[1,1,1]) else '0'
    return int(binary, 2)

def lbp_v2(img):
    bi1, bi2, bi3 = '', '', ''
    n1 = img[1,:,:]
    n2 = img[:,1,:]
    n3 = img[:,:,1]
    for i in range(3):
        for j in range(3):
            if ((i == 1) and (j == 1)):
                continue
            bi1 += '1' if (n1[i,j] > img[1,1,1]) else '0'
            bi2 += '1' if (n2[i,j] > img[1,1,1]) else '0'
            bi3 += '1' if (n3[i,j] > img[1,1,1]) else '0'
    bi1 = bi1[3] + bi1[:3] + bi1[4] + bi1[:5:-1]
    bi2 = bi2[3] + bi2[:3] + bi2[4] + bi2[:5:-1]
    bi3 = bi3[3] + bi3[:3] + bi3[4] + bi3[:5:-1]
    return (int(bi1, 2) + int(bi2, 2) + int(bi3, 2)) / 3

def lbp_v3(img):
    bina = ''
    for i in range(1,3,1):
        for j in range(1,3,1):
            for k in range(1,3,1):
                if (i == j) and (j == k) and (k == 1):
                    continue
                bina += '1' if (img[i,j,k] > img[1,1,1]) else '0'
    return int(bina, 2)

"""Exemple



```
# LBP_3D(image, lbp_v1)
```
"""

